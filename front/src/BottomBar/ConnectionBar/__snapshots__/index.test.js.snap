// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectionBar should match snapshot when in the connected state 1`] = `
.c0 {
  background: green;
  padding: 0.6rem 3rem 0.6rem 0.6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: white;
  position: relative;
}

.c1 {
  text-transform: uppercase;
  margin: 0;
  display: block;
  font-size: 1.4rem;
}

<ConnectionBar
  connectionStatus="connected"
>
  <styled.div
    background={
      Array [
        "
              background: ",
        [Function],
        ";
            ",
      ]
    }
  >
    <div
      className="c0"
    >
      <styled.p>
        <p
          className="c1"
        >
          connected
        </p>
      </styled.p>
    </div>
  </styled.div>
</ConnectionBar>
`;

exports[`ConnectionBar should match snapshot when in the connecting state 1`] = `
.c0 {
  background: #ffcc00;
  padding: 0.6rem 3rem 0.6rem 0.6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: white;
  position: relative;
}

.c1 {
  text-transform: uppercase;
  margin: 0;
  display: block;
  font-size: 1.4rem;
}

.c2 {
  padding-left: 2rem;
  position: absolute;
  top: 50%;
  right: 1rem;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

<ConnectionBar
  connectionStatus="connecting"
>
  <styled.div
    background={
      Array [
        "
              background: ",
        [Function],
        ";
            ",
      ]
    }
  >
    <div
      className="c0"
    >
      <styled.p>
        <p
          className="c1"
        >
          connecting...
        </p>
      </styled.p>
      <styled.div>
        <div
          className="c2"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f110",
                  "M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z",
                ],
                "iconName": "spinner",
                "prefix": "fas",
              }
            }
            listItem={false}
            mask={null}
            name=""
            pull={null}
            pulse={false}
            rotation={null}
            size="2x"
            spin={true}
            symbol={false}
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-spinner fa-w-16 fa-spin fa-2x "
              data-icon="spinner"
              data-prefix="fas"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </div>
      </styled.div>
    </div>
  </styled.div>
</ConnectionBar>
`;

exports[`ConnectionBar should match snapshot when in the disconnected state 1`] = `
.c0 {
  background: Tomato;
  padding: 0.6rem 3rem 0.6rem 0.6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: white;
  position: relative;
}

.c1 {
  text-transform: uppercase;
  margin: 0;
  display: block;
  font-size: 1.4rem;
}

<ConnectionBar
  connectionStatus="disconnected"
>
  <styled.div
    background={
      Array [
        "
              background: ",
        [Function],
        ";
            ",
      ]
    }
  >
    <div
      className="c0"
    >
      <styled.p>
        <p
          className="c1"
        >
          disconnected
        </p>
      </styled.p>
    </div>
  </styled.div>
</ConnectionBar>
`;
